cmake_minimum_required (VERSION 2.6) 
project (Team_5_project) 

if(NOT CMAKE_BUILD_TYPE) 
  set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "" FORCE) 
endif(NOT CMAKE_BUILD_TYPE) 
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11") 
SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wall -pedantic") 
SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3") 
option(test "Build tests." ON) 

SET(SOURCE_FILES src/Simulation.cpp src/Generation.cpp src/Allele.cpp src/Experiment.cpp) 
include_directories(${CMAKE_SOURCE_DIR}/extra/include) 
add_executable(Genetics src/main.cpp ${SOURCE_FILES}) 
if (test) 
  enable_testing() 
  find_package(GTest) 
  if (NOT GTEST_FOUND) 
    link_directories(${CMAKE_SOURCE_DIR}/extra/lib) 
    SET(GTEST_INCLUDE_DIRS ${CMAKE_SOURCE_DIR}/extra/include) 
    SET(GTEST_BOTH_LIBRARIES libgtest.a libgtest_main.a) 
  endif(NOT GTEST_FOUND) 
  include_directories(${GTEST_INCLUDE_DIRS} ${CMAKE_SOURCE_DIR}/src) 
  add_executable(genetics_unittest test/test/genetics_unittest.cpp ${SOURCE_FILES}) 
  target_link_libraries(genetics_unittest ${GTEST_BOTH_LIBRARIES} pthread) 
  add_test(Team_5_project genetics_unittest) 
endif(test) 
find_package(Doxygen) 
if (DOXYGEN_FOUND) 
  add_custom_target(doc 
    ${DOXYGEN_EXECUTABLE} ${CMAKE_SOURCE_DIR}/Doxyfile 
    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR} 
    COMMENT "Generating API documentation with Doxygen" VERBATIM) 
endif(DOXYGEN_FOUND)
